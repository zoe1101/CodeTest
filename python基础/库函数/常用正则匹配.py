import re


def regexp_extract(str, pattern):
    return re.compile(pattern).findall(str)


if __name__ == '__main__':
    # 手机号码匹配
    '''
    国际电话号码标准格式是：国际字冠+国家代码+地区代码(区号)+电话号码
    最新号段归属地数据库:https://www.qqzeng.com/tongji.html
    移动号段：
    134 135 136 137 138 139 147 148 150 151 152 157 158 159 172 178 182 183 184 187 188 195 198
    联通号段：
    130 131 132 145 146 155 156 166 167 171 175 176 185 186 196
    电信号段：
    133 149 153 173 174 177 180 181 189 190 191 193 199
    虚拟运营商:
    162 165 167 170 171 广电：192
    '''
    str = '张三的手机号码：13711111111，李四的号码：(+86) 13711111123 或 +8613711111121'
    # 仅手机号码
    pattern = '(?<!\d)(13[0-9]\d{8}|14[5-9]\d{8}|15[0-35-9]\d{8}|16[25-7]\d{8}|17[0-8]\d{8}|18[0-9]\d{8}|19[0135689]\d{8})(?!\d)'  ## 利用负向零宽断言，断言手机号前后不能出现数字

    # 国际代码+手机号码
    # pattern = '(?<!\d)((\+\(\d{2}\))?(13[0-9]|14[5-9]|15[0-35-9]|16[25-7]|17[0-8]|18[0-9]|19[0135689])\d{8})(?!\d)'  ## 利用负向零宽断言，断言手机号前后不能出现数字
    pattern = '(?<!\d)((?:\(?\+\d{2}\)?\s?)?13[0-9]\d{8}|14[5-9]\d{8}|15[0-35-9]\d{8}|16[25-7]\d{8}|17[0-8]\d{8}|18[0-9]\d{8}|19[0135689]\d{8})(?!\d)'  ## 利用负向零宽断言，断言手机号前后不能出现数字

    # 数值匹配
    str = '340m/s,5000m/h，+10033.45元,-101.2元,-3E-3，10.98%，-1.111%,10.12‰; 13,456,789; 2.608,24; 12.608,234,24   12,300,450.900,764,123'
    # 连续数字
    pattern = '\d+'
    # 获取所有数值（包含科学计数法一起识别匹配）
    pattern = r'[-+]?\d+\.?\d*[eE]?[-+]?\d*'
    
    # 分数
    pattern = r'[-+]?\d+\.?\d*[%‰]'
    
    # 带,的数字
    pattern = r'\b\d{1,3}(?:,\d{3})*(?:\.\d{3})?(?:,\d{3})*,\d{1,3}\b'
    print(regexp_extract(str, pattern))

